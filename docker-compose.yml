services:
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_data:/app/static
      - media_data:/app/media
    depends_on:
      - web
      - frontend
    networks:
      - backend

  web:
    build: .
    container_name: django_web
    volumes:
      - static_data:/app/static
      - media_data:/app/media
    env_file:
      - .env
    expose:
      - "8000"
    depends_on:
      - postgres
      - redis
      - mongo
    networks:
      - backend

  frontend:
    build:
      context: ./frontend
    container_name: vue_frontend
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    expose:
      - "3000"
    networks:
      - backend

  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7-alpine
    container_name: redis
    networks:
      - backend

  mongo:
    image: mongo:6-jammy
    container_name: mongo_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo_data:/data/db
    networks:
      - backend

  celery:
    build: .
    container_name: celery_worker
    command: celery -A config worker --loglevel=info
    depends_on:
      - redis
      - postgres
      - mongo
    env_file:
      - .env
    networks:
      - backend

volumes:
  postgres_data:
  mongo_data:
  static_data:
  media_data:

networks:
  backend:
    driver: bridge
